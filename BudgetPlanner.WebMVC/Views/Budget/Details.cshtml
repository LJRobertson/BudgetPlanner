@model BudgetPlanner.Models.BudgetDetail

@{
    ViewBag.Title = "Details";
}
<div class="custom-header text-center">
    <span>@Html.DisplayFor(model => model.BudgetName)</span>
    <h4>Budget Details</h4>
</div>

<div>
    <hr />
    <div class="budget-detail-category-container">
        <dd>
            <div class="budget-detail-limits text-center">
                <span>@Html.DisplayNameFor(model => model.BudgetAmount):</span> @Html.DisplayFor(model => model.BudgetAmount)
                <br />
                @if (Model.AmountSpent > Model.BudgetAmount)
                {
                    <span>@Html.DisplayNameFor(model => model.AmountSpent):</span> <span class="negative">@Html.DisplayFor(model => model.AmountSpent)</span>
                }
                @if (Model.AmountSpent <= Model.BudgetAmount)
                {
                    <span>@Html.DisplayNameFor(model => model.AmountSpent):</span> @Html.DisplayFor(model => model.AmountSpent)
                }
            </div>
        </dd>
        <dd>
            @foreach (var category in Model.ListOfCategories)
            {
                <div class="budget-detail-category-card">
                    @*<div class="category-header text-center d-flex justify-content-between">
                            <span id="category-name">@category.Name</span>
                            <span id="category-limits">Limit:@string.Format("{0:C}", category.CategoryAmount)   Spent: @string.Format("{0:C}", category.AmountSpent)     Available: @string.Format("{0:C}", category.RemainingCategoryAmount)</span>
                        </div>*@
                    <div class="category-header text-center">
                        <span id="category-name">@category.Name</span>

                        <div class="category-header-container">
                            <div class="category-header-row row">
                                <div class="category-header-limits col-sm-4">
                                    <span>Limit:</span> @string.Format("{0:C}", category.CategoryAmount)
                                </div>
                                <div class="category-header-limits col-sm-4">
                                    <span>Spent:</span> @string.Format("{0:C}", category.AmountSpent)
                                </div>
                                @if (category.RemainingCategoryAmount < 0)
                                {
                                    <div class="category-header-limits col-sm-4">
                                        <span>Available:</span> <span class="negative">@string.Format("{0:C}", category.RemainingCategoryAmount)</span>
                                    </div>
                                }
                                @if (category.RemainingCategoryAmount >= 0)
                                {
                                    <div class="category-header-limits col-sm-4">
                                        <span>Available:</span> <span class="positive">@string.Format("{0:C}", category.RemainingCategoryAmount)</span>
                                    </div>
                                }

                            </div>
                        </div>
                    </div>


                    <table>
                        <tr>
                            <th>
                                Merchant Name
                            </th>
                            <th>
                                Amount
                            </th>
                            <th>
                                Date
                            </th>
                        </tr>
                        <tr>
                            @foreach (var testTransaction in Model.ListOfTransactions)
                            {
                                if (testTransaction.CategoryId == category.CategoryId)
                                {
                                    <div class="category-transaction-row row">
                                        <div class="category-transaction-item col">
                                            <span>@testTransaction.MerchantName</span>
                                            @string.Format("{0:C}", testTransaction.Amount)
                                        </div>
                                        <div class="category-transaction-item" colspan="2">
                                            Date: @testTransaction.TransactionDate.ToString("MM/dd/yyyy")
                                        </div>
                                    </div>
                                    <hr />
                                }

                            }
                        </tr>
                    </table>

                    <div class="budget-transaction-display">
                        <ul>
                            <div class="category-transaction container">
                                @foreach (var transaction in Model.ListOfTransactions)
                                {
                                    if (transaction.CategoryId == category.CategoryId)
                                    {
                                        <div class="category-transaction-row row">
                                            <div class="category-transaction-item col">
                                                <span>@transaction.MerchantName</span>
                                                @string.Format("{0:C}", transaction.Amount)
                                            </div>
                                            <div class="category-transaction-item" colspan="2">
                                                Date: @transaction.TransactionDate.ToString("MM/dd/yyyy")
                                            </div>
                                        </div>
                                        <hr />
                                    }
                                }
                            </div>
                        </ul>
                    </div>
                </div>
            }
        </dd>
    </div>
</div>
<div class="viewing-message text-center">
    <p>
        You are currently viewing budget number:
        @Html.DisplayFor(model => model.BudgetId), @Html.DisplayFor(model => model.BudgetName)
    </p>
</div>

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.BudgetId }) |
    @Html.ActionLink("Back to List", "Index")
</p>
